@model PersonalFinances.BUSINESS.ViewModels.ListRecordsModel

<div class="jumbotron">
    <h1>YOUR FINANCIAL RECORDS, from @Model.beginDate to @Model.endDate </h1>

    <div class="row">
        <ul class="nav nav-pills">
            <li><a href="@Url.Action("Details","Dossier",new { dossierId=Model.DossierId})" class="btn btn-primary btn-lg">Back to Dossier&raquo;</a></li>

            <li><a href="@Url.Action("DeleteSelection",new { dossierId=Model.DossierId, beginDate=Model.beginDate, endDate=Model.endDate})" class="btn btn-danger btn-lg">Delete selection&raquo;</a></li>
            <li>
                <button type="button" id="ManageExpensesCategories" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#ManageCategoriesModal">
                    Expense Categories
                </button>
            </li>
            <li>
                <button type="button" id="ManageRevenuesCategories" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#ManageCategoriesModal">
                    Revenues Categories
                </button>
            </li>
            <li>
                <input class="btn btn-primary btn-lg" type="button" id="createExpense" value="New Expense" data-toggle="modal" data-target="#ModalEditCreate" />
            </li>
            <li>
                <input class="btn btn-primary btn-lg" type="button" id="createRevenue" value="New Revenue" data-toggle="modal" data-target="#ModalEditCreate" />

            </li>
            
        </ul>
    </div>


</div>

<div class="container">
    
    

    <div class="row">
        
    @if (Model.PagedListRecords.Count > 0)
    {

        <div class="col-md-9">
            <div class="row justify-content-md-center">
                <div class="col-md-12">
                    <div class="row">

                        <div class="col-md-offset-1 col-md-4 col-md-offset-1">
                            <input class="btn btn-primary btn-lg" type="button" id="startNewSearch" value="Full Search" data-toggle="modal" data-target="#ModalEditCreate" />
                        </div>

                        <div class="col-md-2">
                            <div class="row">
                                <input class="btn btn-primary btn-lg" type="button" id="startQuickSearch" value="Quick Search" />
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="row">
                                <input type="text" fullsearch="beginDate" value="" />
                                <label>Begin date</label>

                            </div>
                            <div class="row">
                                <input type="text" fullsearch="endDate" value="" />
                                <label>End date</label>
                            </div>
                        </div>

                        

                    </div>

                </div>
            </div>

            <div class="row">
                <div class="col-md-offset-2 col-md-8 col-md-offset-2">

                    @{
                        var navTab = new PersonalFinances.BUSINESS.ViewModels.NavigationData
                        {
                            DossierId = Model.DossierId,
                            beginDate = Model.beginDate,
                            endDate = Model.endDate,
                            CurrentPage = Model.CurrentPage,
                            TotalNumberOfPages = Model.TotalNumberOfPages,
                            ItemsPerPage = Model.ItemsPerPage
                        };
                        Html.RenderPartial("_NavigationTab", navTab);
                    }
                </div>
            </div>

      
            <table class="listTable row">
                <tr>
                    <th>
                        Date
                    </th>
                    <th>
                        Expense
                    </th>
                    <th>
                        Revenue
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        Comment
                    </th>
                    <th>
                        Category
                    </th>
                    <th>
                        Subcategory
                    </th>
                    <th>

                    </th>
                    <th>

                    </th>
                </tr>

                @foreach (var item in Model.PagedListRecords)
                {
                    <tr id="tr_@item.recordId"
                        subcategoryId="@item.recordSubcategoryId"
                        expense="@item.expense"
                        revenue="@item.revenue"
                        category="@item.CategoryDescription"
                        subcategory="@item.SubcategoryDescription">

                        <td id="Date_@item.recordId">
                            @item.date.ToString("dd/MM/yyyy")
                            @*@Html.DisplayFor(modelItem => item.date.ToString("dd/MM/yyyy"))*@
                        </td>
                        @{ 
                            decimal amount = item.expense ?? 0;
                            string expense = (amount == 0) ? "" : decimal.Round(amount, 2, MidpointRounding.AwayFromZero).ToString() + " €";
                            amount = item.revenue ?? 0;
                            string revenue = (amount == 0) ? "" : decimal.Round(amount, 2, MidpointRounding.AwayFromZero).ToString() + " €";

                        }

                        <td id="Expense_@item.recordId">
                            @expense
                        </td>
                        <td id="Revenue_@item.recordId">
                            @revenue
                        <td id="Description_@item.recordId">
                            @Html.DisplayFor(modelItem => item.description)
                        </td>
                        <td id="Comment_@item.recordId">
                            @Html.DisplayFor(modelItem => item.comment)
                        </td>
                        <td id="Category_@item.recordId">
                            @Html.DisplayFor(modelItem => item.CategoryDescription)
                        </td>
                        <td id="Subcategory_@item.recordId">
                            @Html.DisplayFor(modelItem => item.SubcategoryDescription)
                        </td>
                        <td>
                            @*<a id="edit_@item.recordId" >Edit</a>*@
                            <button id="btnEdit_@item.recordId" type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#ModalEditCreate">
                                Edit
                            </button>
                        </td>
                        <td>
                              <a id="btnDelete_@item.recordId" href="@Url.Action("Delete", new { dossierId = Model.DossierId, recordId = item.recordId })" class="btn btn-danger btn-sm">Delete</a>
                           
                        </td>
                    </tr>

             }

            </table>
        </div>

        <div class="col-md-3">


            <!-- Nav tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li class="active"><a href="#expenses" role="tab" data-toggle="tab">Expenses</a></li>
                <li><a href="#revenues" role="tab" data-toggle="tab">Revenues</a></li>
                <li><a href="#cashflow" role="tab" data-toggle="tab">Cash Flow</a></li>
                <li><a href="#piechart" role="tab" data-toggle="tab">Pie Chart</a></li>
            </ul>

            <!-- Tab panes -->
            <div class="tab-content">
                <div class="tab-pane active" id="expenses">
                    @{
                        ViewBag.Type = "EXPENSES";
                        PersonalFinances.BUSINESS.ViewModels.IncomeStatementTab ReportExpenses = Model.ReportExpenses;


                    }

                    @Html.Partial(partialViewName: "_IncomeStatementTab", model: ReportExpenses)
                </div>
                <div class="tab-pane" id="revenues">
                    @{
                        ViewBag.Type = "REVENUES";
                        PersonalFinances.BUSINESS.ViewModels.IncomeStatementTab ReportRevenues = Model.ReportRevenues;

                     }
                    @Html.Partial(partialViewName: "_IncomeStatementTab", model: ReportRevenues)
                </div>
                <div class="tab-pane" id="cashflow">
                    <h3>Net Cash Flow:  @Model.CashFlow €</h3>
                    <h4>From @Model.beginDate To @Model.endDate</h4> 

                </div>
                <div class="tab-pane" id="piechart">
                    <div>
                        <div id="piechart" class="col-lg-3 col-lg-offset-9"></div>
                    </div>
                </div>
            </div>

        </div>

    }
    else
    {
        <h1>No Record found</h1>
    }
    </div>
</div>


<!-- Modal Edit/Create/Search-->
<div class="modal fade" id="ModalEditCreate" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title" id="ModalEditCreateTitle">Edit Record</h1>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div  id="editRecord" class="modal-body">
                @Html.Partial(partialViewName: "_Edit", model: Model.emptyRecordForEdit)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnSaveUpdateCreate" actiontype="edit">Save changes</button>
            </div>
        </div>
    </div>
</div>



<!-- Modal Category Management-->
<div class="modal fade" id="ManageCategoriesModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" isExpense="true">
    <div class="modal-dialog" role="document" >
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title" id="exampleModalLabel">Handle Categories</h1>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @{
                    ViewBag.FromTo = "FROM";
                }
                @Html.Partial(partialViewName: "_HandleCategories", model: Model.emptyRecordForEdit)
     
                @{
                    ViewBag.FromTo = "TO";
                }
                @Html.Partial(partialViewName: "_HandleCategories", model: Model.emptyRecordForEdit)
            </div>
        
            <div class="row">
                <div class="col-md-offset-2 col-md-2 col-md-offset-2">
                    <button type="button" id="mergeCatSubcat" class="btn btn-primary">Merge</button>
                </div>
                <div class="col-md-offset-2 col-md-2 col-md-offset-2">
                    <button type="button" id="deleteEmptyCategories" class="btn btn-danger">Delete Empty</button>
                </div>
            </div>

            <div class="modal-footer">
                
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>




    @section Scripts{
        
        
        <script>
            var dossierId_ASP =@Model.DossierId;
            var beginDate_ASP ="@Model.beginDate";
            var endDate_ASP ="@Model.endDate";

            var ItemsPerPage_ASP =@Model.ItemsPerPage
            var TotalNumberOfPages_ASP = @Model.TotalNumberOfPages;
            var CurrentPage_ASP = @Model.CurrentPage;

            var actionLink_ASP = "@Url.Action(actionName:"Index")";
            var actionLinkMergeCategories_ASP = "@Url.Action(actionName:"MergeCategories")";
            var actionLinkDeleteEmptyCategories_ASP = "@Url.Action(actionName: "DeleteEmptyCategories")";
            var UrlCreateAjax_ASP = "@Url.Action("CreateAjax", "Record")";
            var UrlEditAjax_ASP = "@Url.Action("EditAjax", "Record")";
            var UrlSearch_ASP = "@Url.Action("FullSearch", "Record")";
            var UrlNewReport_ASP = "@Url.Action("IncomeStatement", "Record")";
            var UrlCategories_ASP = "@Url.Action("Categories", "Record")";
            var UrlSubcategories_ASP = "@Url.Action("Subcategories", "Record")";

        </script>
        
      

        <script src="~/Scripts/record/index.js"></script>


        <script src="~/Scripts/charts/charts_loader.js"></script>


        <script type="text/javascript">
             google.charts.load('current', { 'packages': ['corechart'] });
             google.charts.setOnLoadCallback(drawChart);

             function drawChart() {

                 var data = google.visualization.arrayToDataTable([
                     ['Category', 'Total']


                     @{

                         List<PersonalFinances.BUSINESS.ViewModels.IncomeStatementLine> lines = (from l in Model.ReportExpenses.report
                                                                                                 where (l.bitmap == 1)
                                                                                                 select l).ToList();
                      }

                    @foreach (var line in lines)
                    {
                        string tot = line.total.ToString().Replace(',', '.');


                        @: ,['@line.category', @tot]
                    }
                   
                 ]);

                 var options = {
                     title: 'My Expenses',
                     width: 600,
                     height: 400
                 };

                 var chart = new google.visualization.PieChart(document.getElementById('piechart'));

                 chart.draw(data, options);
             }
        </script>
        
        @*<script src="~/Scripts/piechart.js"></script>*@
      

    }


